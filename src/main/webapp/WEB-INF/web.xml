<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <display-name>SecurityFilter Example Application</display-name>

    <filter>
        <filter-name>Security Filter</filter-name>
        <filter-class>org.securityfilter.filter.SecurityFilter</filter-class>
        <init-param>
            <param-name>config</param-name>
            <param-value>WEB-INF/securityfilter-config.xml</param-value>
            <description>Configuration file location (this is the default value)</description>
        </init-param>
        <init-param>
            <param-name>validate</param-name>
            <param-value>true</param-value>
            <description>Validate config file if set to true</description>
        </init-param>
        <!--
              <init-param>
                 <param-name>loginSubmitPattern</param-name>
                 <param-value>/logMeIn</param-value>
                 <description>
                    As an example a login form can define "logMeIn" as it action in place of the standard
                    "j_security_check" which is a special flag user by app servers for container managed security.
                 </description>
              </init-param>
        -->
    </filter>

    <!-- map all requests to the SecurityFilter, control what it does with configuration settings -->
    <filter-mapping>
        <filter-name>Security Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--
       <servlet>
          <servlet-name>NoResponseServlet</servlet-name>
          <description>For Orion only</description>
          <servlet-class>org.securityfilter.servlet.NoResponseServlet</servlet-class>
       </servlet>

       <servlet-mapping>
          <servlet-name>NoResponseServlet</servlet-name>
          <url-pattern>/logMeIn</url-pattern>
       </servlet-mapping>
    -->

    <!-- make the session time-out after one minute -->
    <session-config>
        <session-timeout>1000</session-timeout>
    </session-config>

    <welcome-file-list>
        <welcome-file>/propertyadmin/index.jsp</welcome-file>
    </welcome-file-list>

    <!-- SecurityFilter works with custom error pages -->
    <error-page>
        <error-code>403</error-code>
        <location>/propertyadmin/pages-error-400.html</location>
    </error-page>
</web-app>